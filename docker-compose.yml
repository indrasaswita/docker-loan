version: "3.9"
services:
  # rundeck:
  #   image: rundeck/rundeck:3.4.9
  #   container_name: bfs_rundeck
  #   restart: always
  #   volumes:
  #     - /tmp/rundeck/projects:/var/rundeck/projects
  #     - /tmp/rundeck/var:/var/lib/rundeck/var
  #     - /tmp/rundeck/logs:/var/lib/rundeck/logs
  #     - /tmp/rundeck/data:/var/lib/rundeck/data
  #     - /run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - RUNDECK_ADMIN_NAME=admin
  #     - RUNDECK_ADMIN_PASS=admin
  #     - RUNDECK_USER_NAME=user
  #     - RUNDECK_USER_PASS=user
  #     - RUNDECK_JVM_XMX=1024m
  #     - RUNDECK_JVM_XMS=256m
  #     - RUNDECK_JVM_XX_MAX_PERM_SIZE=256m
  #     - RUNDECK_LOGLEVEL_DEFAULT=INFO
  #     - RUNDECK_GRAILS_SERVER_URL=http://localhost:4440
  #     - FRAMEWORK_SERVER_NAME=localhost
  #     - FRAMEWORK_SERVER_HOSTNAME=localhost
  #     - FRAMEWORK_SERVER_PORT=4440
  #     - FRAMEWORK_SERVER_URL=http://localhost:4440
  #     - FRAMEWORK_SERVER_USERNAME=admin
  #     - FRAMEWORK_SERVER_PASSWORD=admin
  #   ports:
  #     - 4440:4440

  redis:
    image: redis:5.0
    container_name: redis_localhost
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.3
    container_name: zookeeper_localhost
    user: root
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.3
    container_name: kafka_localhost
    user: root
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
    ports:
      - "9092:9092"

  mongo:
    image: mongo
    container_name: mongo_localhost
    volumes:
      - ./mongo/db:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "password"
      ALLOW_EMPTY_PASSWORD: "yes"

  # mongo1:
  #   container_name: mongo1
  #   image: mongo:4.4
  #   volumes:
  #     - ~/mongors/data1:/data/db
  #     - ./rs-init.sh:/scripts/rs-init.sh
  #   networks:
  #     - mongors-network
  #   ports:
  #     - 27021:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: "root"
  #     MONGO_INITDB_ROOT_PASSWORD: "password"
  #   links:
  #     - mongo2
  #     - mongo3
  #   restart: always
  #   entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  # mongo2:
  #   container_name: mongo2
  #   image: mongo:4.4
  #   volumes:
  #     - ~/mongors/data2:/data/db
  #   networks:
  #     - mongors-network
  #   ports:
  #     - 27022:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: "root"
  #     MONGO_INITDB_ROOT_PASSWORD: "password"
  #   restart: always
  #   entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  # mongo3:
  #   container_name: mongo3
  #   image: mongo:4.4
  #   volumes:
  #     - ~/mongors/data3:/data/db
  #   networks:
  #     - mongors-network
  #   ports:
  #     - 27023:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: "root"
  #     MONGO_INITDB_ROOT_PASSWORD: "password"
  #   restart: always
  #   entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: 'k5451408_rahayu'
      MYSQL_USER: 'stationery'
      MYSQL_PASSWORD: 'stationery'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./mysql/db:/var/lib/mysql

volumes:
  my-db:

# networks:
#   mongors-network:
#     driver: bridge